{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "10618625337018822762"
    }
  },
  "parameters": {
    "Availability": {
      "type": "string",
      "defaultValue": "None",
      "metadata": {
        "description": "Set the desired availability / SLA with a pooled host pool.  Choose \"None\" if deploying a personal host pool."
      },
      "allowedValues": [
        "AvailabilitySet",
        "AvailabilityZones",
        "None"
      ]
    },
    "AvailabilitySetNamePrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If using availability sets, enter the name prefix for the resources."
      }
    },
    "AvailabilityZones": {
      "type": "array",
      "defaultValue": [
        "1"
      ],
      "metadata": {
        "description": "If using availability zones, enter the desired zones for the AVD session hosts."
      }
    },
    "DiskEncryptionSetResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If using Server Side Encryption, enter the resource ID for the disk encryption set."
      }
    },
    "DomainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "If domain or hybrid joining the session hosts, input the password for the principal that will join the hosts to the domain."
      }
    },
    "DomainServices": {
      "type": "string",
      "defaultValue": "ActiveDirectory",
      "metadata": {
        "description": "The service providing domain services for Azure Virtual Desktop."
      },
      "allowedValues": [
        "ActiveDirectory",
        "None",
        "NoneWithIntune"
      ]
    },
    "DomainUserPrincipalName": {
      "type": "securestring",
      "metadata": {
        "description": "If domain or hybrid joining the session hosts, input the user principal name for the principal that will join the hosts to the domain."
      }
    },
    "HostPoolResourceId": {
      "type": "string",
      "metadata": {
        "description": "Enter the resource ID for the existing AVD host pool."
      }
    },
    "KeyVaultName": {
      "type": "string",
      "defaultValue": "kv-avd-d-use",
      "metadata": {
        "description": "Enter the name of the Azure key vault."
      },
      "minLength": 3,
      "maxLength": 24
    },
    "LocalAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Enter the local administrator password for the AVD session hosts."
      }
    },
    "LocalAdminUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Enter the local administrator username for the AVD session hosts."
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Location for all the deployed resources and resource group."
      }
    },
    "ResourceGroupName": {
      "type": "string",
      "defaultValue": "rg-avd-d-use",
      "metadata": {
        "description": "Enter the name of the new resource group that will be deployed with this solution"
      }
    },
    "SecurityPrincipalObjectIds": {
      "type": "array",
      "metadata": {
        "description": "Enter an array of Object IDs for the security principals to assign to the Key Vault for template spec deployments."
      }
    },
    "SessionHostLocation": {
      "type": "string",
      "metadata": {
        "description": "Enter the location for the AVD session hosts."
      }
    },
    "SessionHostOuPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The distinguished name for the target Organization Unit in Active Directory Domain Services."
      }
    },
    "SessionHostResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Enter the resource group name for the AVD session hosts."
      }
    },
    "SubnetResourceId": {
      "type": "string",
      "metadata": {
        "description": "Enter the resource ID for the target subnet for the AVD session hosts."
      }
    },
    "Tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "The key / value pairs of metadata for the Azure resources."
      }
    },
    "TemplateSpecName": {
      "type": "string",
      "defaultValue": "ts-avd-d-use",
      "metadata": {
        "description": "Enter the name for the template spec."
      }
    },
    "TemplateSpecVersion": {
      "type": "string",
      "defaultValue": "1.0",
      "metadata": {
        "description": "Enter the version number for the template spec version"
      }
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]",
      "metadata": {
        "description": "DO NOT MODIFY THIS VALUE! The timestamp is needed to differentiate deployments for certain Azure resources and must be set using a parameter."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2020-10-01",
      "name": "[parameters('ResourceGroupName')]",
      "location": "[parameters('Location')]",
      "tags": "[parameters('Tags')]"
    },
    {
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2022-04-01",
      "name": "[guid(subscription().id, 'CaseWorkerDeploy')]",
      "properties": {
        "roleName": "[format('KeyVaultDeployAction_{0}', subscription().subscriptionId)]",
        "description": "Allows a principal to get but not view Key Vault secrets for an ARM template deployment.",
        "assignableScopes": [
          "[subscription().id]"
        ],
        "permissions": [
          {
            "actions": [
              "Microsoft.KeyVault/vaults/deploy/action"
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('KeyVault_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "DomainPassword": {
            "value": "[parameters('DomainPassword')]"
          },
          "DomainUserPrincipalName": {
            "value": "[parameters('DomainUserPrincipalName')]"
          },
          "KeyVaultName": {
            "value": "[parameters('KeyVaultName')]"
          },
          "LocalAdminPassword": {
            "value": "[parameters('LocalAdminPassword')]"
          },
          "LocalAdminUsername": {
            "value": "[parameters('LocalAdminUsername')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "RoleDefinitionId": {
            "value": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', guid(subscription().id, 'CaseWorkerDeploy'))]"
          },
          "SecurityPrincipalObjectIds": {
            "value": "[parameters('SecurityPrincipalObjectIds')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "2832356363949360559"
            }
          },
          "parameters": {
            "DomainPassword": {
              "type": "securestring"
            },
            "DomainUserPrincipalName": {
              "type": "securestring"
            },
            "KeyVaultName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "RoleDefinitionId": {
              "type": "string"
            },
            "LocalAdminPassword": {
              "type": "securestring"
            },
            "LocalAdminUsername": {
              "type": "securestring"
            },
            "SecurityPrincipalObjectIds": {
              "type": "array"
            }
          },
          "variables": {
            "Secrets": [
              {
                "name": "DomainPassword",
                "value": "[parameters('DomainPassword')]"
              },
              {
                "name": "DomainUserPrincipalName",
                "value": "[parameters('DomainUserPrincipalName')]"
              },
              {
                "name": "LocalAdminPassword",
                "value": "[parameters('LocalAdminPassword')]"
              },
              {
                "name": "LocalAdminUsername",
                "value": "[parameters('LocalAdminUsername')]"
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-10-01",
              "name": "[parameters('KeyVaultName')]",
              "location": "[parameters('Location')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": false,
                "enableRbacAuthorization": true,
                "enableSoftDelete": false,
                "publicNetworkAccess": "Enabled"
              }
            },
            {
              "copy": {
                "name": "secrets",
                "count": "[length(variables('Secrets'))]"
              },
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('KeyVaultName'), variables('Secrets')[copyIndex()].name)]",
              "properties": {
                "value": "[variables('Secrets')[copyIndex()].value]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            },
            {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(range(0, length(parameters('SecurityPrincipalObjectIds'))))]"
              },
              "condition": "[not(empty(parameters('SecurityPrincipalObjectIds')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('KeyVaultName'))]",
              "name": "[guid(parameters('SecurityPrincipalObjectIds')[range(0, length(parameters('SecurityPrincipalObjectIds')))[copyIndex()]], parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[parameters('RoleDefinitionId')]",
                "principalId": "[parameters('SecurityPrincipalObjectIds')[range(0, length(parameters('SecurityPrincipalObjectIds')))[copyIndex()]]]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]",
        "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', guid(subscription().id, 'CaseWorkerDeploy'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('TemplateSpec_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Availability": {
            "value": "[parameters('Availability')]"
          },
          "AvailabilitySetNamePrefix": {
            "value": "[parameters('AvailabilitySetNamePrefix')]"
          },
          "AvailabilityZones": {
            "value": "[parameters('AvailabilityZones')]"
          },
          "DiskEncryptionSetResourceId": {
            "value": "[parameters('DiskEncryptionSetResourceId')]"
          },
          "DomainServices": {
            "value": "[parameters('DomainServices')]"
          },
          "HostPoolResourceId": {
            "value": "[parameters('HostPoolResourceId')]"
          },
          "KeyVaultResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('KeyVault_{0}', parameters('Timestamp'))), '2022-09-01').outputs.resourceId.value]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "SessionHostLocation": {
            "value": "[parameters('SessionHostLocation')]"
          },
          "SessionHostOuPath": {
            "value": "[parameters('SessionHostOuPath')]"
          },
          "SessionHostResourceGroupName": {
            "value": "[parameters('SessionHostResourceGroupName')]"
          },
          "SubnetResourceId": {
            "value": "[parameters('SubnetResourceId')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          },
          "TemplateSpecName": {
            "value": "[parameters('TemplateSpecName')]"
          },
          "TemplateSpecVersion": {
            "value": "[parameters('TemplateSpecVersion')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "8995498891829098597"
            }
          },
          "parameters": {
            "Availability": {
              "type": "string"
            },
            "AvailabilitySetNamePrefix": {
              "type": "string"
            },
            "AvailabilityZones": {
              "type": "array"
            },
            "DiskEncryptionSetResourceId": {
              "type": "string"
            },
            "DomainServices": {
              "type": "string"
            },
            "HostPoolResourceId": {
              "type": "string"
            },
            "KeyVaultResourceId": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "SessionHostLocation": {
              "type": "string"
            },
            "SessionHostOuPath": {
              "type": "string"
            },
            "SessionHostResourceGroupName": {
              "type": "string"
            },
            "SubnetResourceId": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "TemplateSpecName": {
              "type": "string"
            },
            "TemplateSpecVersion": {
              "type": "string"
            }
          },
          "variables": {
            "$fxv#0": {
              "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "metadata": {
                "_generator": {
                  "name": "bicep",
                  "version": "0.17.1.54307",
                  "templateHash": "11170129995817373537"
                }
              },
              "parameters": {
                "Availability": {
                  "type": "string",
                  "defaultValue": "AvailabilityDefaultValue"
                },
                "AvailabilitySetNamePrefix": {
                  "type": "string",
                  "defaultValue": "AvailabilitySetNamePrefixDefaultValue"
                },
                "AvailabilityZones": {
                  "type": "array",
                  "defaultValue": [
                    "1"
                  ]
                },
                "DiskEncryptionSetResourceId": {
                  "type": "string",
                  "defaultValue": "DiskEncryptionSetResourceIdDefaultValue"
                },
                "DomainServices": {
                  "type": "string",
                  "defaultValue": "DomainServicesDefaultValue"
                },
                "HostPoolResourceId": {
                  "type": "string",
                  "defaultValue": "HostPoolResourceIdDefaultValue"
                },
                "KeyVaultResourceId": {
                  "type": "string",
                  "defaultValue": "KeyVaultResourceIdDefaultValue"
                },
                "SessionHostCount": {
                  "type": "int",
                  "defaultValue": 1
                },
                "SessionHostIndex": {
                  "type": "int",
                  "defaultValue": 0
                },
                "SessionHostLocation": {
                  "type": "string",
                  "defaultValue": "SessionHostLocationDefaultValue"
                },
                "SessionHostOuPath": {
                  "type": "string",
                  "defaultValue": "SessionHostOuPathDefaultValue"
                },
                "SessionHostResourceGroupName": {
                  "type": "string",
                  "defaultValue": "SessionHostResourceGroupNameDefaultValue"
                },
                "SubnetResourceId": {
                  "type": "string",
                  "defaultValue": "SubnetResourceIdDefaultValue"
                },
                "Timestamp": {
                  "type": "string",
                  "defaultValue": "[[utcNow('yyyyMMddhhmmss')]"
                }
              },
              "variables": {
                "MaxResourcesPerTemplateDeployment": 133,
                "DivisionValue": "[[div(parameters('SessionHostCount'), variables('MaxResourcesPerTemplateDeployment'))]",
                "DivisionRemainderValue": "[[mod(parameters('SessionHostCount'), variables('MaxResourcesPerTemplateDeployment'))]",
                "SessionHostBatchCount": "[[if(greater(variables('DivisionRemainderValue'), 0), add(variables('DivisionValue'), 1), variables('DivisionValue'))]",
                "MaxAvSetMembers": 200,
                "BeginAvSetRange": "[[div(parameters('SessionHostIndex'), variables('MaxAvSetMembers'))]",
                "EndAvSetRange": "[[div(add(parameters('SessionHostCount'), parameters('SessionHostIndex')), variables('MaxAvSetMembers'))]",
                "AvailabilitySetCount": "[[length(range(variables('BeginAvSetRange'), add(sub(variables('EndAvSetRange'), variables('BeginAvSetRange')), 1)))]",
                "HostPoolName": "[[split(parameters('HostPoolResourceId'), '/')[8]]",
                "HostPoolResourceGroupName": "[[split(parameters('HostPoolResourceId'), '/')[4]]",
                "KeyVaultName": "[[split(parameters('KeyVaultResourceId'), '/')[8]]",
                "KeyVaultResourceGroupName": "[[split(parameters('KeyVaultResourceId'), '/')[4]]",
                "KeyVaultSubscriptionId": "[[split(parameters('KeyVaultResourceId'), '/')[2]]"
              },
              "resources": [
                {
                  "type": "Microsoft.Resources/deployments",
                  "apiVersion": "2022-09-01",
                  "name": "[[format('ExistingHostPool_{0}', parameters('Timestamp'))]",
                  "resourceGroup": "[[variables('HostPoolResourceGroupName')]",
                  "properties": {
                    "expressionEvaluationOptions": {
                      "scope": "inner"
                    },
                    "mode": "Incremental",
                    "parameters": {
                      "HostPoolName": {
                        "value": "[[variables('HostPoolName')]"
                      }
                    },
                    "template": {
                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                      "contentVersion": "1.0.0.0",
                      "metadata": {
                        "_generator": {
                          "name": "bicep",
                          "version": "0.17.1.54307",
                          "templateHash": "1543235606614166007"
                        }
                      },
                      "parameters": {
                        "HostPoolName": {
                          "type": "string"
                        }
                      },
                      "resources": [],
                      "outputs": {
                        "Location": {
                          "type": "string",
                          "value": "[[reference(resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('HostPoolName')), '2022-09-09', 'full').location]"
                        },
                        "Properties": {
                          "type": "object",
                          "value": "[[reference(resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('HostPoolName')), '2022-09-09')]"
                        },
                        "Tags": {
                          "type": "object",
                          "value": "[[reference(resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('HostPoolName')), '2022-09-09', 'full').tags]"
                        },
                        "VMTemplate": {
                          "type": "object",
                          "value": "[[json(reference(resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('HostPoolName')), '2022-09-09').vmTemplate)]"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "Microsoft.Resources/deployments",
                  "apiVersion": "2022-09-01",
                  "name": "[[format('HostPoolRegistrationToken_{0}', parameters('Timestamp'))]",
                  "resourceGroup": "[[variables('HostPoolResourceGroupName')]",
                  "properties": {
                    "expressionEvaluationOptions": {
                      "scope": "inner"
                    },
                    "mode": "Incremental",
                    "parameters": {
                      "HostPoolName": {
                        "value": "[[variables('HostPoolName')]"
                      },
                      "HostPoolType": {
                        "value": "[[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Properties.value.HostPoolType]"
                      },
                      "LoadBalancerType": {
                        "value": "[[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Properties.value.LoadBalancerType]"
                      },
                      "Location": {
                        "value": "[[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Location.value]"
                      },
                      "PreferredAppGroupType": {
                        "value": "[[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Properties.value.PreferredAppGroupType]"
                      },
                      "Tags": {
                        "value": "[[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Tags.value]"
                      }
                    },
                    "template": {
                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                      "contentVersion": "1.0.0.0",
                      "metadata": {
                        "_generator": {
                          "name": "bicep",
                          "version": "0.17.1.54307",
                          "templateHash": "17258894170017447927"
                        }
                      },
                      "parameters": {
                        "HostPoolName": {
                          "type": "string"
                        },
                        "HostPoolType": {
                          "type": "string"
                        },
                        "LoadBalancerType": {
                          "type": "string"
                        },
                        "Location": {
                          "type": "string"
                        },
                        "PreferredAppGroupType": {
                          "type": "string"
                        },
                        "Tags": {
                          "type": "object"
                        },
                        "Timestamp": {
                          "type": "string",
                          "defaultValue": "[[utcNow('u')]"
                        }
                      },
                      "resources": [
                        {
                          "type": "Microsoft.DesktopVirtualization/hostPools",
                          "apiVersion": "2022-09-09",
                          "name": "[[parameters('HostPoolName')]",
                          "location": "[[parameters('Location')]",
                          "tags": "[[parameters('Tags')]",
                          "properties": {
                            "hostPoolType": "[[parameters('HostPoolType')]",
                            "loadBalancerType": "[[parameters('LoadBalancerType')]",
                            "preferredAppGroupType": "[[parameters('PreferredAppGroupType')]",
                            "registrationInfo": {
                              "expirationTime": "[[dateTimeAdd(parameters('Timestamp'), 'PT2H')]",
                              "registrationTokenOperation": "Update"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "dependsOn": [
                    "[[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp')))]"
                  ]
                },
                {
                  "[string('copy')]": {
                    "name": "sessionHosts",
                    "count": "[[length(range(1, variables('SessionHostBatchCount')))]",
                    "mode": "serial",
                    "batchSize": 1
                  },
                  "type": "Microsoft.Resources/deployments",
                  "apiVersion": "2022-09-01",
                  "name": "[[format('SessionHosts_{0}_{1}', range(1, variables('SessionHostBatchCount'))[copyIndex()], parameters('Timestamp'))]",
                  "resourceGroup": "[[parameters('SessionHostResourceGroupName')]",
                  "properties": {
                    "expressionEvaluationOptions": {
                      "scope": "inner"
                    },
                    "mode": "Incremental",
                    "parameters": {
                      "Availability": {
                        "value": "[[parameters('Availability')]"
                      },
                      "AvailabilitySetNamePrefix": {
                        "value": "[[parameters('AvailabilitySetNamePrefix')]"
                      },
                      "AvailabilitySetCount": {
                        "value": "[[variables('AvailabilitySetCount')]"
                      },
                      "AvailabilitySetIndex": {
                        "value": "[[variables('BeginAvSetRange')]"
                      },
                      "AvailabilityZones": {
                        "value": "[[parameters('AvailabilityZones')]"
                      },
                      "DiskEncryptionSetResourceId": {
                        "value": "[[parameters('DiskEncryptionSetResourceId')]"
                      },
                      "DiskSku": {
                        "value": "[[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.osDiskType]"
                      },
                      "DomainName": {
                        "value": "[[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.domain]"
                      },
                      "DomainServices": {
                        "value": "[[parameters('DomainServices')]"
                      },
                      "HostPoolName": {
                        "value": "[[variables('HostPoolName')]"
                      },
                      "HostPoolResourceGroupName": {
                        "value": "[[variables('HostPoolResourceGroupName')]"
                      },
                      "ImageId": "[[if(equals(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.customImageId, null()), createObject('value', ''), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.customImageId))]",
                      "ImageOffer": "[[if(equals(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.galleryImageOffer, null()), createObject('value', ''), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.galleryImageOffer))]",
                      "ImagePublisher": "[[if(equals(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.galleryImagePublisher, null()), createObject('value', ''), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.galleryImagePublisher))]",
                      "ImageSku": "[[if(equals(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.galleryImageSku, null()), createObject('value', ''), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.galleryImageSku))]",
                      "ImageType": {
                        "value": "[[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.imageType]"
                      },
                      "ImageVersion": {
                        "value": "latest"
                      },
                      "KeyVaultName": {
                        "value": "[[variables('KeyVaultName')]"
                      },
                      "KeyVaultResourceGroupName": {
                        "value": "[[variables('KeyVaultResourceGroupName')]"
                      },
                      "KeyVaultSubscriptionId": {
                        "value": "[[variables('KeyVaultSubscriptionId')]"
                      },
                      "Location": {
                        "value": "[[parameters('SessionHostLocation')]"
                      },
                      "SessionHostOuPath": {
                        "value": "[[parameters('SessionHostOuPath')]"
                      },
                      "SessionHostCount": "[[if(and(equals(range(1, variables('SessionHostBatchCount'))[copyIndex()], variables('SessionHostBatchCount')), greater(variables('DivisionRemainderValue'), 0)), createObject('value', variables('DivisionRemainderValue')), createObject('value', variables('MaxResourcesPerTemplateDeployment')))]",
                      "SessionHostIndex": "[[if(equals(range(1, variables('SessionHostBatchCount'))[copyIndex()], 1), createObject('value', parameters('SessionHostIndex')), createObject('value', add(mul(sub(range(1, variables('SessionHostBatchCount'))[copyIndex()], 1), variables('MaxResourcesPerTemplateDeployment')), parameters('SessionHostIndex'))))]",
                      "SubnetResourceId": {
                        "value": "[[parameters('SubnetResourceId')]"
                      },
                      "Timestamp": {
                        "value": "[[parameters('Timestamp')]"
                      },
                      "TrustedLaunch": "[[if(equals(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.securityType, 'TrustedLaunch'), createObject('value', true()), createObject('value', false()))]",
                      "VirtualMachineNamePrefix": {
                        "value": "[[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.namePrefix]"
                      },
                      "VirtualMachineSize": {
                        "value": "[[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VMTemplate.value.vmSize.id]"
                      },
                      "VirtualMachineTags": {
                        "value": "[[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Tags.value]"
                      }
                    },
                    "template": {
                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                      "contentVersion": "1.0.0.0",
                      "metadata": {
                        "_generator": {
                          "name": "bicep",
                          "version": "0.17.1.54307",
                          "templateHash": "2685408475056336629"
                        }
                      },
                      "parameters": {
                        "Availability": {
                          "type": "string"
                        },
                        "AvailabilitySetCount": {
                          "type": "int"
                        },
                        "AvailabilitySetIndex": {
                          "type": "int"
                        },
                        "AvailabilitySetNamePrefix": {
                          "type": "string"
                        },
                        "AvailabilityZones": {
                          "type": "array"
                        },
                        "DiskEncryptionSetResourceId": {
                          "type": "string"
                        },
                        "DiskSku": {
                          "type": "string"
                        },
                        "DomainName": {
                          "type": "string"
                        },
                        "DomainServices": {
                          "type": "string"
                        },
                        "HostPoolName": {
                          "type": "string"
                        },
                        "HostPoolResourceGroupName": {
                          "type": "string"
                        },
                        "ImageId": {
                          "type": "string"
                        },
                        "ImageOffer": {
                          "type": "string"
                        },
                        "ImagePublisher": {
                          "type": "string"
                        },
                        "ImageSku": {
                          "type": "string"
                        },
                        "ImageType": {
                          "type": "string"
                        },
                        "ImageVersion": {
                          "type": "string"
                        },
                        "KeyVaultName": {
                          "type": "string"
                        },
                        "KeyVaultResourceGroupName": {
                          "type": "string"
                        },
                        "KeyVaultSubscriptionId": {
                          "type": "string"
                        },
                        "Location": {
                          "type": "string"
                        },
                        "SessionHostCount": {
                          "type": "int"
                        },
                        "SessionHostIndex": {
                          "type": "int"
                        },
                        "SessionHostOuPath": {
                          "type": "string"
                        },
                        "SubnetResourceId": {
                          "type": "string"
                        },
                        "Timestamp": {
                          "type": "string"
                        },
                        "TrustedLaunch": {
                          "type": "bool"
                        },
                        "UserAssignedIdentity": {
                          "type": "string",
                          "defaultValue": ""
                        },
                        "VirtualMachineNamePrefix": {
                          "type": "string"
                        },
                        "VirtualMachineSize": {
                          "type": "string"
                        },
                        "VirtualMachineTags": {
                          "type": "object"
                        }
                      },
                      "variables": {
                        "Intune": "[[if(equals(parameters('DomainServices'), 'NoneWithIntune'), true(), false())]",
                        "NetworkInterfaceNamePrefix": "[[format('nic-{0}-', parameters('VirtualMachineNamePrefix'))]",
                        "VmIdentityType": "[[if(contains(parameters('DomainServices'), 'None'), if(not(empty(parameters('UserAssignedIdentity'))), 'SystemAssigned, UserAssigned', 'SystemAssigned'), if(not(empty(parameters('UserAssignedIdentity'))), 'UserAssigned', 'None'))]",
                        "VmIdentityTypeProperty": {
                          "type": "[[variables('VmIdentityType')]"
                        },
                        "VmUserAssignedIdentityProperty": {
                          "userAssignedIdentities": {
                            "[[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('UserAssignedIdentity')))]": {}
                          }
                        },
                        "VirtualMachineIdentity": "[[if(not(empty(parameters('UserAssignedIdentity'))), union(variables('VmIdentityTypeProperty'), variables('VmUserAssignedIdentityProperty')), variables('VmIdentityTypeProperty'))]"
                      },
                      "resources": [
                        {
                          "[string('copy')]": {
                            "name": "availabilitySet",
                            "count": "[[length(range(0, parameters('AvailabilitySetCount')))]"
                          },
                          "condition": "[[equals(parameters('Availability'), 'AvailabilitySet')]",
                          "type": "Microsoft.Compute/availabilitySets",
                          "apiVersion": "2019-07-01",
                          "name": "[[format('{0}{1}', parameters('AvailabilitySetNamePrefix'), padLeft(add(range(0, parameters('AvailabilitySetCount'))[copyIndex()], parameters('AvailabilitySetIndex')), 2, '0'))]",
                          "location": "[[parameters('Location')]",
                          "tags": "[[parameters('VirtualMachineTags')]",
                          "sku": {
                            "name": "Aligned"
                          },
                          "properties": {
                            "platformUpdateDomainCount": 5,
                            "platformFaultDomainCount": 2
                          }
                        },
                        {
                          "[string('copy')]": {
                            "name": "networkInterfaces",
                            "count": "[[length(range(0, parameters('SessionHostCount')))]"
                          },
                          "type": "Microsoft.Network/networkInterfaces",
                          "apiVersion": "2020-05-01",
                          "name": "[[format('{0}{1}', variables('NetworkInterfaceNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                          "location": "[[parameters('Location')]",
                          "tags": "[[parameters('VirtualMachineTags')]",
                          "properties": {
                            "ipConfigurations": [
                              {
                                "name": "ipconfig",
                                "properties": {
                                  "privateIPAllocationMethod": "Dynamic",
                                  "subnet": {
                                    "id": "[[parameters('SubnetResourceId')]"
                                  },
                                  "primary": true,
                                  "privateIPAddressVersion": "IPv4"
                                }
                              }
                            ],
                            "enableAcceleratedNetworking": true,
                            "enableIPForwarding": false
                          }
                        },
                        {
                          "[string('copy')]": {
                            "name": "customScriptExtension",
                            "count": "[[length(range(0, parameters('SessionHostCount')))]"
                          },
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2021-03-01",
                          "name": "[[format('{0}{1}/CustomScriptExtension', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                          "location": "[[parameters('Location')]",
                          "tags": "[[parameters('VirtualMachineTags')]",
                          "properties": {
                            "publisher": "Microsoft.Compute",
                            "type": "CustomScriptExtension",
                            "typeHandlerVersion": "1.10",
                            "autoUpgradeMinorVersion": true,
                            "settings": {
                              "fileUris": [
                                "https://raw.githubusercontent.com/jamasten/AvdAddSessionHostsUI/main/artifacts/Set-SessionHostConfiguration.ps1"
                              ],
                              "timestamp": "[[parameters('Timestamp')]"
                            },
                            "protectedSettings": {
                              "commandToExecute": "[[format('powershell -ExecutionPolicy Unrestricted -File Set-SessionHostConfiguration.ps1 -HostPoolRegistrationToken \"{0}\"', reference(resourceId(parameters('HostPoolResourceGroupName'), 'Microsoft.DesktopVirtualization/hostpools', parameters('HostPoolName')), '2019-12-10-preview').registrationInfo.token)]"
                            }
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Resources/deployments', format('VirtualMachines_{0}', parameters('Timestamp')))]"
                          ]
                        },
                        {
                          "[string('copy')]": {
                            "name": "aadLoginForWindows",
                            "count": "[[length(range(0, parameters('SessionHostCount')))]"
                          },
                          "condition": "[[contains(parameters('DomainServices'), 'None')]",
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2021-03-01",
                          "name": "[[format('{0}{1}/AADLoginForWindows', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                          "location": "[[parameters('Location')]",
                          "tags": "[[parameters('VirtualMachineTags')]",
                          "properties": {
                            "publisher": "Microsoft.Azure.ActiveDirectory",
                            "type": "AADLoginForWindows",
                            "typeHandlerVersion": "1.0",
                            "autoUpgradeMinorVersion": true,
                            "settings": "[[if(variables('Intune'), createObject('mdmId', '0000000a-0000-0000-c000-000000000000'), null())]"
                          },
                          "dependsOn": [
                            "customScriptExtension",
                            "[[resourceId('Microsoft.Resources/deployments', format('VirtualMachines_{0}', parameters('Timestamp')))]"
                          ]
                        },
                        {
                          "type": "Microsoft.Resources/deployments",
                          "apiVersion": "2022-09-01",
                          "name": "[[format('VirtualMachines_{0}', parameters('Timestamp'))]",
                          "properties": {
                            "expressionEvaluationOptions": {
                              "scope": "inner"
                            },
                            "mode": "Incremental",
                            "parameters": {
                              "Availability": {
                                "value": "[[parameters('Availability')]"
                              },
                              "AvailabilitySetNamePrefix": {
                                "value": "[[parameters('AvailabilitySetNamePrefix')]"
                              },
                              "AvailabilityZones": {
                                "value": "[[parameters('AvailabilityZones')]"
                              },
                              "DiskEncryptionSetResourceId": {
                                "value": "[[parameters('DiskEncryptionSetResourceId')]"
                              },
                              "DiskSku": {
                                "value": "[[parameters('DiskSku')]"
                              },
                              "ImageId": {
                                "value": "[[parameters('ImageId')]"
                              },
                              "ImageOffer": {
                                "value": "[[parameters('ImageOffer')]"
                              },
                              "ImagePublisher": {
                                "value": "[[parameters('ImagePublisher')]"
                              },
                              "ImageSku": {
                                "value": "[[parameters('ImageSku')]"
                              },
                              "ImageType": {
                                "value": "[[parameters('ImageType')]"
                              },
                              "ImageVersion": {
                                "value": "[[parameters('ImageVersion')]"
                              },
                              "Location": {
                                "value": "[[parameters('Location')]"
                              },
                              "NetworkInterfaceNamePrefix": {
                                "value": "[[variables('NetworkInterfaceNamePrefix')]"
                              },
                              "SessionHostCount": {
                                "value": "[[parameters('SessionHostCount')]"
                              },
                              "SessionHostIndex": {
                                "value": "[[parameters('SessionHostIndex')]"
                              },
                              "Tags": {
                                "value": "[[parameters('VirtualMachineTags')]"
                              },
                              "TrustedLaunch": {
                                "value": "[[parameters('TrustedLaunch')]"
                              },
                              "VirtualMachineIdentity": {
                                "value": "[[variables('VirtualMachineIdentity')]"
                              },
                              "VirtualMachineNamePrefix": {
                                "value": "[[parameters('VirtualMachineNamePrefix')]"
                              },
                              "VirtualMachinePassword": {
                                "reference": {
                                  "keyVault": {
                                    "id": "[[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('KeyVaultSubscriptionId'), parameters('KeyVaultResourceGroupName')), 'Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
                                  },
                                  "secretName": "LocalAdminPassword"
                                }
                              },
                              "VirtualMachineSize": {
                                "value": "[[parameters('VirtualMachineSize')]"
                              },
                              "VirtualMachineUsername": {
                                "reference": {
                                  "keyVault": {
                                    "id": "[[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('KeyVaultSubscriptionId'), parameters('KeyVaultResourceGroupName')), 'Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
                                  },
                                  "secretName": "LocalAdminUsername"
                                }
                              }
                            },
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "metadata": {
                                "_generator": {
                                  "name": "bicep",
                                  "version": "0.17.1.54307",
                                  "templateHash": "10187618105992642087"
                                }
                              },
                              "parameters": {
                                "Availability": {
                                  "type": "string"
                                },
                                "AvailabilitySetNamePrefix": {
                                  "type": "string"
                                },
                                "AvailabilityZones": {
                                  "type": "array"
                                },
                                "DiskSku": {
                                  "type": "string"
                                },
                                "DiskEncryptionSetResourceId": {
                                  "type": "string"
                                },
                                "ImageId": {
                                  "type": "string"
                                },
                                "ImageOffer": {
                                  "type": "string"
                                },
                                "ImagePublisher": {
                                  "type": "string"
                                },
                                "ImageSku": {
                                  "type": "string"
                                },
                                "ImageType": {
                                  "type": "string"
                                },
                                "ImageVersion": {
                                  "type": "string"
                                },
                                "Location": {
                                  "type": "string"
                                },
                                "NetworkInterfaceNamePrefix": {
                                  "type": "string"
                                },
                                "SessionHostCount": {
                                  "type": "int"
                                },
                                "SessionHostIndex": {
                                  "type": "int"
                                },
                                "Tags": {
                                  "type": "object"
                                },
                                "TrustedLaunch": {
                                  "type": "bool"
                                },
                                "VirtualMachineIdentity": {
                                  "type": "object"
                                },
                                "VirtualMachineNamePrefix": {
                                  "type": "string"
                                },
                                "VirtualMachinePassword": {
                                  "type": "securestring"
                                },
                                "VirtualMachineSize": {
                                  "type": "string"
                                },
                                "VirtualMachineUsername": {
                                  "type": "securestring"
                                }
                              },
                              "variables": {
                                "DiskNamePrefix": "[[format('disk-{0}-', parameters('VirtualMachineNamePrefix'))]",
                                "DiskEncryptionSetName": "[[if(empty(parameters('DiskEncryptionSetResourceId')), '', split(parameters('DiskEncryptionSetResourceId'), '/')[8])]",
                                "DiskEncryptionSetResourceGroupName": "[[if(empty(parameters('DiskEncryptionSetResourceId')), '', split(parameters('DiskEncryptionSetResourceId'), '/')[4])]",
                                "ImageReferences": {
                                  "Custom": {
                                    "id": "[[parameters('ImageId')]"
                                  },
                                  "Gallery": {
                                    "publisher": "[[parameters('ImagePublisher')]",
                                    "offer": "[[parameters('ImageOffer')]",
                                    "sku": "[[parameters('ImageSku')]",
                                    "version": "[[parameters('ImageVersion')]"
                                  }
                                }
                              },
                              "resources": [
                                {
                                  "[string('copy')]": {
                                    "name": "virtualMachines",
                                    "count": "[[length(range(0, parameters('SessionHostCount')))]"
                                  },
                                  "type": "Microsoft.Compute/virtualMachines",
                                  "apiVersion": "2021-11-01",
                                  "name": "[[format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                                  "location": "[[parameters('Location')]",
                                  "tags": "[[parameters('Tags')]",
                                  "identity": "[[parameters('VirtualMachineIdentity')]",
                                  "zones": "[[if(equals(parameters('Availability'), 'AvailabilityZones'), createArray(string(parameters('AvailabilityZones')[mod(range(0, parameters('SessionHostCount'))[copyIndex()], length(parameters('AvailabilityZones')))])), null())]",
                                  "properties": {
                                    "availabilitySet": "[[if(equals(parameters('Availability'), 'AvailabilitySet'), createObject('id', resourceId('Microsoft.Compute/availabilitySets', format('{0}{1}', parameters('AvailabilitySetNamePrefix'), padLeft(div(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 200), 2, '0')))), null())]",
                                    "hardwareProfile": {
                                      "vmSize": "[[parameters('VirtualMachineSize')]"
                                    },
                                    "storageProfile": {
                                      "imageReference": "[[if(equals(parameters('ImageType'), 'Gallery'), variables('ImageReferences').Gallery, variables('ImageReferences').Custom)]",
                                      "osDisk": {
                                        "deleteOption": "Delete",
                                        "createOption": "FromImage",
                                        "caching": "ReadWrite",
                                        "managedDisk": {
                                          "storageAccountType": "[[parameters('DiskSku')]",
                                          "diskEncryptionSet": "[[if(not(empty(parameters('DiskEncryptionSetResourceId'))), createObject('id', resourceId(variables('DiskEncryptionSetResourceGroupName'), 'Microsoft.Compute/diskEncryptionSets', variables('DiskEncryptionSetName'))), null())]"
                                        },
                                        "name": "[[format('{0}{1}', variables('DiskNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                                        "osType": "Windows"
                                      },
                                      "dataDisks": []
                                    },
                                    "osProfile": {
                                      "computerName": "[[format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                                      "adminUsername": "[[parameters('VirtualMachineUsername')]",
                                      "adminPassword": "[[parameters('VirtualMachinePassword')]",
                                      "windowsConfiguration": {
                                        "provisionVMAgent": true,
                                        "enableAutomaticUpdates": false
                                      },
                                      "secrets": [],
                                      "allowExtensionOperations": true
                                    },
                                    "networkProfile": {
                                      "networkInterfaces": [
                                        {
                                          "id": "[[resourceId('Microsoft.Network/networkInterfaces', format('{0}{1}', parameters('NetworkInterfaceNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0')))]",
                                          "properties": {
                                            "deleteOption": "Delete"
                                          }
                                        }
                                      ]
                                    },
                                    "securityProfile": {
                                      "uefiSettings": "[[if(parameters('TrustedLaunch'), createObject('secureBootEnabled', true(), 'vTpmEnabled', true()), null())]",
                                      "securityType": "[[if(parameters('TrustedLaunch'), 'TrustedLaunch', null())]"
                                    },
                                    "diagnosticsProfile": {
                                      "bootDiagnostics": {
                                        "enabled": false
                                      }
                                    },
                                    "licenseType": "[[if(equals(parameters('ImagePublisher'), 'MicrosoftWindowsServer'), 'Windows_Server', 'Windows_Client')]"
                                  }
                                }
                              ]
                            }
                          },
                          "dependsOn": [
                            "networkInterfaces"
                          ]
                        },
                        {
                          "condition": "[[contains(parameters('DomainServices'), 'ActiveDirectory')]",
                          "type": "Microsoft.Resources/deployments",
                          "apiVersion": "2022-09-01",
                          "name": "[[format('JsonADDomainExtension_{0}', parameters('Timestamp'))]",
                          "properties": {
                            "expressionEvaluationOptions": {
                              "scope": "inner"
                            },
                            "mode": "Incremental",
                            "parameters": {
                              "DomainJoinPassword": {
                                "reference": {
                                  "keyVault": {
                                    "id": "[[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('KeyVaultSubscriptionId'), parameters('KeyVaultResourceGroupName')), 'Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
                                  },
                                  "secretName": "DomainPassword"
                                }
                              },
                              "DomainJoinUserPrincipalName": {
                                "reference": {
                                  "keyVault": {
                                    "id": "[[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('KeyVaultSubscriptionId'), parameters('KeyVaultResourceGroupName')), 'Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
                                  },
                                  "secretName": "DomainUserPrincipalName"
                                }
                              },
                              "DomainName": {
                                "value": "[[parameters('DomainName')]"
                              },
                              "Location": {
                                "value": "[[parameters('Location')]"
                              },
                              "SessionHostCount": {
                                "value": "[[parameters('SessionHostCount')]"
                              },
                              "SessionHostIndex": {
                                "value": "[[parameters('SessionHostIndex')]"
                              },
                              "SessionHostOuPath": {
                                "value": "[[parameters('SessionHostOuPath')]"
                              },
                              "Tags": {
                                "value": "[[parameters('VirtualMachineTags')]"
                              },
                              "Timestamp": {
                                "value": "[[parameters('Timestamp')]"
                              },
                              "VirtualMachineNamePrefix": {
                                "value": "[[parameters('VirtualMachineNamePrefix')]"
                              }
                            },
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "metadata": {
                                "_generator": {
                                  "name": "bicep",
                                  "version": "0.17.1.54307",
                                  "templateHash": "10923910493753546301"
                                }
                              },
                              "parameters": {
                                "DomainJoinPassword": {
                                  "type": "securestring"
                                },
                                "DomainJoinUserPrincipalName": {
                                  "type": "securestring"
                                },
                                "DomainName": {
                                  "type": "string"
                                },
                                "Location": {
                                  "type": "string"
                                },
                                "SessionHostCount": {
                                  "type": "int"
                                },
                                "SessionHostIndex": {
                                  "type": "int"
                                },
                                "SessionHostOuPath": {
                                  "type": "string"
                                },
                                "Tags": {
                                  "type": "object"
                                },
                                "Timestamp": {
                                  "type": "string"
                                },
                                "VirtualMachineNamePrefix": {
                                  "type": "string"
                                }
                              },
                              "resources": [
                                {
                                  "[string('copy')]": {
                                    "name": "jsonADDomainExtension",
                                    "count": "[[length(range(0, parameters('SessionHostCount')))]"
                                  },
                                  "type": "Microsoft.Compute/virtualMachines/extensions",
                                  "apiVersion": "2021-03-01",
                                  "name": "[[format('{0}{1}/JsonADDomainExtension', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                                  "location": "[[parameters('Location')]",
                                  "tags": "[[parameters('Tags')]",
                                  "properties": {
                                    "forceUpdateTag": "[[parameters('Timestamp')]",
                                    "publisher": "Microsoft.Compute",
                                    "type": "JsonADDomainExtension",
                                    "typeHandlerVersion": "1.3",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                      "Name": "[[parameters('DomainName')]",
                                      "User": "[[parameters('DomainJoinUserPrincipalName')]",
                                      "Restart": "true",
                                      "Options": "3",
                                      "OUPath": "[[parameters('SessionHostOuPath')]"
                                    },
                                    "protectedSettings": {
                                      "Password": "[[parameters('DomainJoinPassword')]"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "dependsOn": [
                            "customScriptExtension",
                            "[[resourceId('Microsoft.Resources/deployments', format('VirtualMachines_{0}', parameters('Timestamp')))]"
                          ]
                        }
                      ]
                    }
                  },
                  "dependsOn": [
                    "[[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('ExistingHostPool_{0}', parameters('Timestamp')))]",
                    "[[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('HostPoolResourceGroupName')), 'Microsoft.Resources/deployments', format('HostPoolRegistrationToken_{0}', parameters('Timestamp')))]"
                  ]
                }
              ]
            },
            "$fxv#1": {
              "$schema": "https://schema.management.azure.com/schemas/2021-09-09/uiFormDefinition.schema.json",
              "view": {
                "kind": "Form",
                "properties": {
                  "title": "TitleDefaultValue",
                  "steps": [
                    {
                      "name": "basics",
                      "label": "Basics",
                      "elements": [
                        {
                          "name": "resourceScope",
                          "type": "Microsoft.Common.ResourceScope",
                          "location": {
                            "resourceTypes": [],
                            "allowedValues": [
                              "SessionHostLocationDefaultValue"
                            ]
                          },
                          "subscription": {
                            "constraints": {
                              "validations": [
                                {
                                  "isValid": "[[equals(steps('basics').resourceScope.subscription.displayName, 'SubscriptionNameDefaultValue')]",
                                  "message": "Only the following subscription is allowed: SubscriptionNameDefaultValue"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "name": "sessionHostIndex",
                          "type": "Microsoft.Common.Slider",
                          "min": 0,
                          "max": 4999,
                          "label": "Session Host Index",
                          "showStepMarkers": false,
                          "toolTip": "Pick the number of the first session host in this deployment.",
                          "constraints": {
                            "required": true
                          },
                          "visible": true
                        },
                        {
                          "name": "sessionHostCount",
                          "type": "Microsoft.Common.Slider",
                          "min": 1,
                          "max": "[[sub(5000, steps('basics').sessionHostIndex)]",
                          "label": "Session Host Count",
                          "showStepMarkers": false,
                          "toolTip": "Pick the number of session hosts to deploy.",
                          "constraints": {
                            "required": true
                          },
                          "visible": true
                        }
                      ]
                    }
                  ]
                },
                "outputs": {
                  "parameters": {
                    "SessionHostCount": "[[steps('basics').sessionHostCount]",
                    "SessionHostIndex": "[[steps('basics').sessionHostIndex]"
                  },
                  "kind": "Subscription",
                  "location": "[[steps('basics').resourceScope.location.name]",
                  "subscriptionId": "[[steps('basics').resourceScope.subscription.id]"
                }
              }
            },
            "HostPoolName": "[split(parameters('HostPoolResourceId'), '/')[8]]",
            "TemplateSpecString": "[string(variables('$fxv#0'))]",
            "TemplateSpecAvailability": "[replace(variables('TemplateSpecString'), 'AvailabilityDefaultValue', parameters('Availability'))]",
            "TemplateSpecAvailabilitySetNamePrefix": "[replace(variables('TemplateSpecAvailability'), 'AvailabilitySetNamePrefixDefaultValue', parameters('AvailabilitySetNamePrefix'))]",
            "TemplateSpecAvailabilityZones": "[replace(variables('TemplateSpecAvailabilitySetNamePrefix'), '[\"1\"]', string(parameters('AvailabilityZones')))]",
            "TemplateSpecDiskEncryptionSetResourceId": "[replace(variables('TemplateSpecAvailabilityZones'), 'DiskEncryptionSetResourceIdDefaultValue', parameters('DiskEncryptionSetResourceId'))]",
            "TemplateSpecDomainServices": "[replace(variables('TemplateSpecDiskEncryptionSetResourceId'), 'DomainServicesDefaultValue', parameters('DomainServices'))]",
            "TemplateSpecHostPoolResourceId": "[replace(variables('TemplateSpecDomainServices'), 'HostPoolResourceIdDefaultValue', parameters('HostPoolResourceId'))]",
            "TemplateSpecKeyVaultResourceId": "[replace(variables('TemplateSpecHostPoolResourceId'), 'KeyVaultResourceIdDefaultValue', parameters('KeyVaultResourceId'))]",
            "TemplateSpecSessionHostLocation": "[replace(variables('TemplateSpecKeyVaultResourceId'), 'SessionHostLocationDefaultValue', parameters('SessionHostLocation'))]",
            "TemplateSpecSessionHostOuPath": "[replace(variables('TemplateSpecSessionHostLocation'), 'SessionHostOuPathDefaultValue', parameters('SessionHostOuPath'))]",
            "TemplateSpecSessionHostResourceGroupName": "[replace(variables('TemplateSpecSessionHostOuPath'), 'SessionHostResourceGroupNameDefaultValue', parameters('SessionHostResourceGroupName'))]",
            "TemplateSpecJson": "[replace(variables('TemplateSpecSessionHostResourceGroupName'), 'SubnetResourceIdDefaultValue', parameters('SubnetResourceId'))]",
            "UiDefinitionString": "[string(variables('$fxv#1'))]",
            "UiDefinitionTitle": "[replace(variables('UiDefinitionString'), 'TitleDefaultValue', format('Add Session Hosts to {0}', variables('HostPoolName')))]",
            "UiDefinitionSessionHostLocation": "[replace(variables('UiDefinitionTitle'), 'SessionHostLocationDefaultValue', parameters('SessionHostLocation'))]",
            "UiDefinitionJson": "[replace(variables('UiDefinitionSessionHostLocation'), 'SubscriptionNameDefaultValue', subscription().displayName)]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/templateSpecs",
              "apiVersion": "2022-02-01",
              "name": "[parameters('TemplateSpecName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]"
            },
            {
              "type": "Microsoft.Resources/templateSpecs/versions",
              "apiVersion": "2022-02-01",
              "name": "[format('{0}/{1}', parameters('TemplateSpecName'), parameters('TemplateSpecVersion'))]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "mainTemplate": "[json(variables('TemplateSpecJson'))]",
                "uiFormDefinition": "[json(variables('UiDefinitionJson'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', parameters('TemplateSpecName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('KeyVault_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]"
      ]
    }
  ]
}